apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "neon-proxy.labels" . | nindent 4 }}
    {{- with .Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ .Release.Name }}
  replicas: {{ .Values.proxyCount }}
  selector:
    matchLabels:
      {{- include "neon-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/proxy-config.yaml") . | sha256sum }}  
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/role: "neon-proxy"
        {{- if eq .Values.ENABLE_SEND_TX_API "YES" }} 
        vault.hashicorp.com/agent-inject-secret-operator-keys: "neon-proxy/data/proxy"
        vault.hashicorp.com/agent-inject-template-operator-keys: |
          {{`{{- with secret "neon-proxy/data/proxy" -}}
            {{ range $k, $v := .Data.data }}
            {{ $k }}: {{ $v }}
            {{ end }}
          {{- end -}}`}}
        {{- end }}
        vault.hashicorp.com/agent-inject-secret-proxy-env: "neon-proxy/data/proxy_env"
        vault.hashicorp.com/agent-inject-template-proxy-env: |
          {{`{{- with secret "neon-proxy/data/proxy_env" -}}
            {{ range $k, $v := .Data.data }}
            export  {{ $k }}={{ $v }}
            {{ end }}
          {{- end }}`}}          
      labels:
        application-pod: neon-proxy
        {{- include "neon-proxy.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: proxy
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.envFrom }}        
          envFrom:
          {{- toYaml .Values.envFrom | nindent 10 }}
        {{- end }}        
          ports:
          - name: {{ .Values.service.name }}
            containerPort: {{ .Values.service.port }}
            protocol: {{ .Values.service.protocol }}
        {{- if .Values.extraPorts }}
          {{- range .Values.extraPorts }}
          - name: {{ .name }}
            containerPort: {{ .containerPort }}
            protocol: {{ .protocol }}
          {{- end }}
        {{- end }}
        {{- if .Values.volumeMounts }}
          volumeMounts:
          {{- toYaml .Values.volumeMounts | nindent 10 }}
        {{- end }}
        {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- if eq .Values.ENABLE_SEND_TX_API "YES" }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "/root/.config/solana/scripts/get_keys.sh"]
        {{- end }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}